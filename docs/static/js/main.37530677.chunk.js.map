{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","prototypes","PropTypes","func","isRequired","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"wPAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEVC,mBAAS,IAFC,mBAEvCC,EAFuC,KAE3BC,EAF2B,KAoB9C,OAEI,0BAAMC,SAdW,SAACC,GAClBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAE3BR,GAAc,SAACS,GAAD,OAAWP,GAAX,mBAA0BO,OACxCN,EAAc,OAUd,2BACIO,KAAK,OACLC,MAAOT,EACPU,SAvBc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,YA+B/BZ,EAAYe,WAAa,CACrBd,c,OAAee,EAAUC,KAAKC,Y,2BCtCrBC,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbC,EAFa,iDAEmCC,UAAUH,GAF7C,+DAIAI,MAAMF,GAJN,cAIbG,EAJa,gBAKIA,EAAKC,OALT,uBAKXC,EALW,EAKXA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAXvB,kBAeZM,GAfY,4CAAH,sDCWLO,EAXK,SAAC,GAAuB,EAArBJ,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAE9B,OACI,yBAAKc,UAAU,8CAEX,yBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,2BAAIA,KCsBDO,EA1BC,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECDN,SAACA,GAAc,IAAD,EACZlB,mBAAS,CAC/ByB,KAAM,GACNa,SAAS,IAHyB,mBAC/BC,EAD+B,KACxBC,EADwB,KAiBtC,OAXAC,qBAAU,WACNxB,EAAQC,GAAUwB,MAAK,SAAAC,GAEnBH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAIlB,CAACpB,IAEGqB,EDd2BK,CAAa1B,GAAjCa,EAFgB,EAEtBN,KAAca,EAFQ,EAERA,QAEtB,OACI,oCACI,wBAAIJ,UAAU,8CAA8ChB,GAC3DoB,GAAW,uBAAGJ,UAAU,8CAAb,cAEZ,yBAAKA,UAAU,aAEVH,EAAOJ,KAAI,SAACC,GACT,OACI,kBAAC,EAAD,eACIiB,IAAKjB,EAAIC,IAELD,UESjBkB,EAzBM,WAAO,IAAD,EAEa9C,mBAAS,CAAC,cAFvB,mBAEhB+C,EAFgB,KAEJhD,EAFI,KAIvB,OACI,oCACI,4CACA,kBAAC,EAAD,CAAaA,cAAeA,IAC5B,6BAGA,4BACKgD,EAAWpB,KAAI,SAAAT,GACZ,OACI,kBAAC,EAAD,CACI2B,IAAK3B,EACLA,SAAUA,UCdtC8B,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,W","file":"static/js/main.37530677.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n\r\n    const [inputValue, setInputValue] = useState('')\r\n\r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value)\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (inputValue.trim().length > 2) {\r\n\r\n            setCategories((cats) => [inputValue, ...cats]);\r\n            setInputValue('');\r\n        }\r\n\r\n\r\n    }\r\n\r\n    return (\r\n\r\n        <form onSubmit={handleSubmit}>\r\n\r\n            <input\r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange={handleInputChange}\r\n            />\r\n\r\n        </form>\r\n\r\n    )\r\n\r\n}\r\n\r\nAddCategory.prototypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}","\r\n\r\nexport const getGifs = async (category) => {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=Fsfu7FqC5KnFwXCx3cIoiFWRaFAc150G`\r\n\r\n    const resp = await fetch(url)\r\n    const { data } = await resp.json()\r\n\r\n    const gifs = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url,\r\n        }\r\n    })\r\n\r\n    return gifs;\r\n\r\n}","import React from 'react'\r\n\r\nconst GifGridItem = ({ id, title, url }) => {\r\n    // console.log({ id, title, url });\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeInDown\">\r\n            {/* {img.title} */}\r\n            <img src={url} alt={title} />\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GifGridItem\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport GifGridItem from './GifGridItem'\r\n\r\nconst GifGrid = ({ category }) => {\r\n\r\n    const { data: images, loading } = useFetchGifs(category);\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"card animate__animated animate__fadeInDown\">{category}</h3>\r\n            {loading && <p className=\"card animate__animated animate__zoomInDown\">Loading...</p>}\r\n\r\n            <div className=\"card-grid\">\r\n\r\n                {images.map((img) => {\r\n                    return (\r\n                        <GifGridItem\r\n                            key={img.id}\r\n                            // img={img}\r\n                            {...img}\r\n                        />\r\n                    )\r\n                })}\r\n\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GifGrid\r\n","import { useState, useEffect } from \"react\"\r\nimport { getGifs } from '../helpers/getGifs'\r\n\r\nexport const useFetchGifs = (category) => {\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(() => {\r\n        getGifs(category).then(imgs => {\r\n\r\n            setState({\r\n                data: imgs,\r\n                loading: false\r\n            });\r\n\r\n        })\r\n    }, [category])\r\n\r\n    return state;\r\n}","import React, { useState } from 'react'\r\nimport { AddCategory } from './components/AddCategory'\r\nimport GifGrid from './components/GifGrid'\r\n\r\nconst GifExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState(['One Punch'])\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories={setCategories} />\r\n            <hr />\r\n\r\n\r\n            <ol>\r\n                {categories.map(category => {\r\n                    return (\r\n                        <GifGrid\r\n                            key={category}\r\n                            category={category} />\r\n                    )\r\n\r\n                })}\r\n            </ol>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport GifExpertApp from './GifExpertApp';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}